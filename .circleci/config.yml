version: '2.1'

executors:
  node-image:
    docker:
      - image: cimg/node:14.10.1 
orbs:
  aws-cli: circleci/aws-cli@2.0
  node: circleci/node@5.0.0
jobs:
  build:
    docker:
        - image: 'cimg/base:stable'
    steps:
      - aws-cli/install
      - checkout
      - node/install:
          node-version: '16.13'
      - restore_cache:
          keys:
            - node-deps-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: install packages
          command: npm ci
      - run:
          name: build
          command: npm run build
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: 
          name: Run tests
          command: npm run test
      - run:
          name: bootstrap
          command: |
            for i in $(aws cloudformation list-stacks --stack-status-filter CREATE_COMPLETE --query 'StackSummaries[*].StackId' --output text); do 
              if [[ $i != *"$arn:aws:cloudformation:eu-west-1:748856397011:stack/CDKToolkit/"* ]]
                  then  npm run cdk_bootstrap 
              else
                echo $i
                  break
              fi
            done
      # - run:
      #     name: deploy
      #     command: npm run cdk_deploy
      - run:
          name: destroy
          command: |
            aws s3 rm s3://locococooooooo-adadadadadasdafafaaf --recursive
            aws s3 rb s3://locococooooooo-adadadadadasdafafaaf 
            npm run cdk_destroy

workflows:
  build:
    jobs:
      - build:
          context: aws

