version: '2.1'

executors:
  node-image:
    docker:
      - image: cimg/node:14.10.1 
orbs:
  aws-cli: circleci/aws-cli@2.0
#   typescript: vidsy/typescript@1.2.1
jobs:
  build:
    executor: 
      node-image
    steps:
      # - checkout
      # - restore_cache:
      #     keys:
      #       - node-deps-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      # - run:
      #     name: install packages
      #     command: npm ci
      # - run:
      #     name: build
      #     command: npm run build
      # - save_cache:
      #     key: node-deps-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      #     paths:
      #       - node_modules
      # - run: 
      #     name: Run tests
      #     command: npm run test
      # - run:
      #     name: bootstrap
      #     command: npm run cdk_bootstrap
      # - run:
      #     name: deploy
      #     command: npm run cdk_deploy
      # - run:
      #     name: destroy
      #     command: npm run cdk_destroy
      - run:
          name: "What was my custom environment variable?"
          command: echo ${MY_ENV_VAR}
  aws-cli-setup:
    working_directory: ~/repo
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/install
      - run:
            name: "Setup custom environment variables"
            command: echo 'export MY_ENV_VAR="FOO"' >> $BASH_ENV
      - run:
          name: "What was my custom environment variable?"
          command: echo ${MY_ENV_VAR}
  # run_tests:
  #   executor: my-executor
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install np dependencies
  #         command: |
  #           npm install --save
  #     - run: node bin/s3Bucket.ts

workflows:
  build:
    jobs:
      - aws-cli-setup:
          context: aws
      - build:
          requires:
            - aws-cli-setup
      # - run_tests


